<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8" />
		<meta http-equiv="X-UA-Compatible" content="IE=edge">
		<meta name="viewport" content="width=device-width, initial-scale=1">
		<title>Ansible configurator</title>
		<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/css/bootstrap.min.css" />
		<!-- TODO: Remove .disabled when all modules will be covered -->
		<style type="text/css">
			.js-categories-list .list-group-item:hover,
			.js-modules-list .list-group-item:not(.disabled):hover {
				cursor: pointer;
			}
			.container-fluid {
				margin: 5px;
			}
			.js-categories-list, .js-modules-list, .js-module-options-list, .js-result-command {
				padding: 5px;
			}
			.active .glyphicon {
				color: white;
			}
			.glyphicon.smaller {
				font-size: 10px;
			}
		</style>
	</head>
	<body>
		<div class="container-fluid">
			<div class="row">
				<div class="col-md-2 js-categories-list">
					<ul class="list-group list-unstyled">
						<!-- Populated from JavaScript -->
					</ul>
				</div>
				<div class="col-md-3 hidden js-modules-list">
					<ul class="list-group list-unstyled">
						<!-- Populated from JavaScript -->
					</ul>
				</div>
				<div class="col-md-3 hidden js-module-options-list">
					<ul class="list-group list-unstyled">
						<li class="list-group-item">
							<input type="text" class="js-module-option-value js-module-common-option js-module-option-task-name" autocomplete="off" style="width: 100%;" />
							<br />
							<small>Task name</small>
						</li>
					</ul>
					<ul class="list-group list-unstyled js-module-options-dynamic-list">
						<!-- Populated from JavaScript -->
					</ul>
				</div>
				<div class="col-md-4 hidden js-result-command">
					<textarea class="js-result-textarea" rows="25" autocomplete="off" readonly style="width: 100%;">
					</textarea>
				</div>
			</div>
		</div>

		<script src="http://yastatic.net/jquery/2.1.1/jquery.min.js"></script>
		<script src="http://yastatic.net/lodash/2.4.1/lodash.underscore.min.js"></script>
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/js/bootstrap.min.js"></script>
		<script>
			$(document).ready(function() {
				var modulesData = [
					{
						title: 'Cloud',
						modules: [
							{
								name: 'azure',
								description: 'Create or terminate a virtual machine in azure',
								type: 'core',
								options: {
								}
							},
							{
								name: 'cloudformation',
								description: 'Create a AWS CloudFormation stack',
								type: 'core',
								options: {
								}
							},
							{
								name: 'digital_ocean',
								description: 'Create/delete a droplet/SSH_key in DigitalOcean',
								type: 'core',
								options: {
								}
							},
							{
								name: 'digital_ocean_domain',
								description: 'Create/delete a DNS record in DigitalOcean',
								type: 'core',
								options: {
								}
							},
							{
								name: 'digital_ocean_sshkey',
								description: 'Create/delete an SSH key in DigitalOcean',
								type: 'core',
								options: {
								}
							},
							{
								name: 'docker',
								description: 'Manage docker containers',
								type: 'core',
								options: {
								}
							},
							{
								name: 'ec2',
								description: 'Create, terminate, start or stop an instance in ec2, return instanceid',
								type: 'core',
								options: {
								}
							},
							{
								name: 'ec2_ami',
								description: 'Create or destroy an image in ec2, return imageid',
								type: 'core',
								options: {
								}
							},
							{
								name: 'ec2_ami_search',
								description: 'Retrieve AWS AMI for a given operating system',
								type: 'core',
								options: {
								}
							},
							{
								name: 'ec2_asg',
								description: 'Create or delete AWS Autoscaling Groups',
								type: 'core',
								options: {
								}
							},
							{
								name: 'ec2_eip',
								description: 'Associate an EC2 elastic IP with an instance',
								type: 'core',
								options: {
								}
							},
							{
								name: 'ec2_elb',
								description: 'De-registers or registers instances from EC2 ELBs',
								type: 'core',
								options: {
								}
							},
							{
								name: 'ec2_elb_lb',
								description: 'Creates or destroys Amazon ELB',
								type: 'core',
								options: {
								}
							},
							{
								name: 'ec2_facts',
								description: 'Gathers facts about remote hosts within ec2 (aws)',
								type: 'core',
								options: {
								}
							},
							{
								name: 'ec2_group',
								description: 'Maintain an ec2 VPC security group',
								type: 'core',
								options: {
								}
							},
							{
								name: 'ec2_key',
								description: 'Maintain an ec2 key pair',
								type: 'core',
								options: {
								}
							},
							{
								name: 'ec2_lc',
								description: 'Create or delete AWS Autoscaling Launch Configurations',
								type: 'core',
								options: {
								}
							},
							{
								name: 'ec2_metric_alarm',
								description: 'Create/update or delete AWS Cloudwatch ‘metric alarms’',
								type: 'core',
								options: {
								}
							},
							{
								name: 'ec2_scaling_policy',
								description: 'Create or delete AWS scaling policies for Autoscaling groups',
								type: 'core',
								options: {
								}
							},
							{
								name: 'ec2_snapshot',
								description: 'Creates a snapshot from an existing volume',
								type: 'core',
								options: {
								}
							},
							{
								name: 'ec2_tag',
								description: 'Create and remove tag(s) to ec2 resources',
								type: 'core',
								options: {
								}
							},
							{
								name: 'ec2_vol',
								description: 'Create and attach a volume, return volume id and device map',
								type: 'core',
								options: {
								}
							},
							{
								name: 'ec2_vpc',
								description: 'Configure AWS virtual private clouds',
								type: 'core',
								options: {
								}
							},
							{
								name: 'elasticache',
								description: 'Manage cache clusters in Amazon Elasticache',
								type: 'core',
								options: {
								}
							},
							{
								name: 'gc_storage',
								description: 'This module manages objects/buckets in Google Cloud Storage',
								type: 'core',
								options: {
								}
							},
							{
								name: 'gce',
								description: 'Create or terminate GCE instances',
								type: 'core',
								options: {
								}
							},
							{
								name: 'gce_lb',
								description: 'Create/destroy GCE load-balancer resources',
								type: 'core',
								options: {
								}
							},
							{
								name: 'gce_net',
								description: 'Create/destroy GCE networks and firewall rules',
								type: 'core',
								options: {
								}
							},
							{
								name: 'gce_pd',
								description: 'Utilize GCE persistent disk resources',
								type: 'core',
								options: {
								}
							},
							{
								name: 'glance_image',
								description: 'Add/Delete images from glance',
								type: 'core',
								options: {
								}
							},
							{
								name: 'keystone_user',
								description: 'Manage OpenStack Identity (keystone) users, tenants and roles',
								type: 'core',
								options: {
								}
							},
							{
								name: 'linode',
								description: 'Create / delete / stop / restart an instance in Linode Public Cloud',
								type: 'core',
								options: {
								}
							},
							{
								name: 'nova_compute',
								description: 'Create/Delete VMs from OpenStack',
								type: 'core',
								options: {
								}
							},
							{
								name: 'nova_keypair',
								description: 'Add/Delete key pair from nova',
								type: 'core',
								options: {
								}
							},
							{
								name: 'ovirt',
								description: 'OVirt/RHEV platform management',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'quantum_floating_ip',
								description: 'Add/Remove floating IP from an instance',
								type: 'core',
								options: {
								}
							},
							{
								name: 'quantum_floating_ip_associate',
								description: 'Associate or disassociate a particular floating IP with an instance',
								type: 'core',
								options: {
								}
							},
							{
								name: 'quantum_network',
								description: 'Creates/Removes networks from OpenStack',
								type: 'core',
								options: {
								}
							},
							{
								name: 'quantum_router',
								description: 'Create or Remove router from openstack',
								type: 'core',
								options: {
								}
							},
							{
								name: 'quantum_router_gateway',
								description: 'Set/unset a gateway interface for the router with the specified external network',
								type: 'core',
								options: {
								}
							},
							{
								name: 'quantum_router_interface',
								description: 'Attach/Dettach a subnet’s interface to a router',
								type: 'core',
								options: {
								}
							},
							{
								name: 'quantum_subnet',
								description: 'Add/remove subnet from a network',
								type: 'core',
								options: {
								}
							},
							{
								name: 'rax',
								description: 'Create / delete an instance in Rackspace Public Cloud',
								type: 'core',
								options: {
								}
							},
							{
								name: 'rax_cbs',
								description: 'Manipulate Rackspace Cloud Block Storage Volumes',
								type: 'core',
								options: {
								}
							},
							{
								name: 'rax_cbs_attachments',
								description: 'Manipulate Rackspace Cloud Block Storage Volume Attachments',
								type: 'core',
								options: {
								}
							},
							{
								name: 'rax_cdb',
								description: 'Create/delete or resize a Rackspace Cloud Databases instance',
								type: 'core',
								options: {
								}
							},
							{
								name: 'rax_cdb_database',
								description: 'Create / delete a database in the Cloud Databases',
								type: 'core',
								options: {
								}
							},
							{
								name: 'rax_cdb_user',
								description: 'Create / delete a Rackspace Cloud Database',
								type: 'core',
								options: {
								}
							},
							{
								name: 'rax_clb',
								description: 'Create / delete a load balancer in Rackspace Public Cloud',
								type: 'core',
								options: {
								}
							},
							{
								name: 'rax_clb_nodes',
								description: 'Add, modify and remove nodes from a Rackspace Cloud Load Balancer',
								type: 'core',
								options: {
								}
							},
							{
								name: 'rax_dns',
								description: 'Manage domains on Rackspace Cloud DNS',
								type: 'core',
								options: {
								}
							},
							{
								name: 'rax_dns_record',
								description: 'Manage DNS records on Rackspace Cloud DNS',
								type: 'core',
								options: {
								}
							},
							{
								name: 'rax_facts',
								description: 'Gather facts for Rackspace Cloud Servers',
								type: 'core',
								options: {
								}
							},
							{
								name: 'rax_files',
								description: 'Manipulate Rackspace Cloud Files Containers',
								type: 'core',
								options: {
								}
							},
							{
								name: 'rax_files_objects',
								description: 'Upload, download, and delete objects in Rackspace Cloud Files',
								type: 'core',
								options: {
								}
							},
							{
								name: 'rax_identity',
								description: 'Load Rackspace Cloud Identity',
								type: 'core',
								options: {
								}
							},
							{
								name: 'rax_keypair',
								description: 'Create a keypair for use with Rackspace Cloud Servers',
								type: 'core',
								options: {
								}
							},
							{
								name: 'rax_meta',
								description: 'Manipulate metadata for Rackspace Cloud Servers',
								type: 'core',
								options: {
								}
							},
							{
								name: 'rax_network',
								description: 'Create / delete an isolated network in Rackspace Public Cloud',
								type: 'core',
								options: {
								}
							},
							{
								name: 'rax_queue',
								description: 'Create / delete a queue in Rackspace Public Cloud',
								type: 'core',
								options: {
								}
							},
							{
								name: 'rax_scaling_group',
								description: 'Manipulate Rackspace Cloud Autoscale Groups',
								type: 'core',
								options: {
								}
							},
							{
								name: 'rax_scaling_policy',
								description: 'Manipulate Rackspace Cloud Autoscale Scaling Policy',
								type: 'core',
								options: {
								}
							},
							{
								name: 'rds',
								description: 'Create, delete, or modify an Amazon rds instance',
								type: 'core',
								options: {
								}
							},
							{
								name: 'rds_param_group',
								description: 'Manage RDS parameter groups',
								type: 'core',
								options: {
								}
							},
							{
								name: 'rds_subnet_group',
								description: 'Manage RDS database subnet groups',
								type: 'core',
								options: {
								}
							},
							{
								name: 'route53',
								description: 'Add or delete entries in Amazons Route53 DNS service',
								type: 'core',
								options: {
								}
							},
							{
								name: 's3',
								description: 'S3 module putting a file into S3',
								type: 'core',
								options: {
								}
							},
							{
								name: 'virt',
								description: 'Manages virtual machines supported by libvirt',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'vsphere_guest',
								description: 'Create/delete/manage a guest VM through VMware vSphere',
								type: 'core',
								options: {
								}
							}
						]
					},
					{
						title: 'Commands',
						modules: [
							{
								name: 'command',
								title: 'Executes a command on a remote node',
								description: 'The command module takes the command name followed by a list of space-delimited arguments. The given command will be executed on all selected nodes. It will not be processed through the shell, so variables like $HOME and operations like "<", ">", "|", and "&" will not work (use the shell module if you need these features)',
								type: 'core',
								options: {
									chdir: {
										type: 'string',
										required: false,
										since_version: '0.6',
										description: 'Cd into this directory before running the command'
									},
									creates: {
										type: 'string',
										required: false,
										description: 'A filename, when it already exists, this step will not be run'
									},
									executable: {
										type: 'string',
										required: false,
										since_version: '0.9',
										description: 'Change the shell used to execute the command. Should be an absolute path to the executable'
									},
									free_form: {
										type: 'string',
										required: true,
										description: 'Takes a free form command to run'
									},
									removes: {
										type: 'string',
										required: false,
										since_version: '0.8',
										description: 'A filename, when it does not exist, this step will not be run'
									},
									warn: {
										type: 'boolean',
										required: false,
										since_version: '1.8',
										default_value: 'True',
										description: 'If command warnings are on in ansible.cfg, do not warn about this particular line if set to no/false'
									}
								}
							},
							{
								name: 'raw',
								title: 'Executes a low-down and dirty SSH command',
								description: 'Executes a low-down and dirty SSH command, not going through the module subsystem. This is useful and should only be done in two cases. The first case is installing python-simplejson on older (Python 2.4 and before) hosts that need it as a dependency to run modules, since nearly all core modules require it. Another is speaking to any devices such as routers that do not have any Python installed. In any other case, using the shell or command module is much more appropriate. Arguments given to raw are run directly through the configured remote shell. Standard output, error output and return code are returned when available. There is no change handler support for this module. This module does not require python on the remote system, much like the script module',
								type: 'core',
								options: {
									executable: {
										type: 'string',
										required: false,
										since_version: '1.0',
										description: 'Change the shell used to execute the command. Should be an absolute path to the executable'
									},
									free_form: {
										type: 'string',
										required: true,
										description: 'Takes a free form command to run'
									}
								}
							},
							{
								name: 'script',
								title: 'Runs a local script on a remote node after transferring it',
								description: 'The script module takes the script name followed by a list of space-delimited arguments. The local script at path will be transferred to the remote node and then executed. The given script will be processed through the shell environment on the remote node. This module does not require python on the remote system, much like the raw module',
								type: 'core',
								options: {
									creates: {
										type: 'string',
										required: false,
										since_version: '1.5',
										description: 'A filename, when it already exists, this step will not be run'
									},
									free_form: {
										type: 'string',
										required: true,
										description: 'Path to the local script file followed by optional arguments'
									},
									removes: {
										type: 'string',
										required: false,
										since_version: '1.5',
										description: 'A filename, when it does not exist, this step will not be run'
									}
								}
							},
							{
								name: 'shell',
								title: 'Execute commands in nodes',
								description: 'The shell module takes the command name followed by a list of space-delimited arguments. It is almost exactly like the command module but runs the command through a shell (/bin/sh) on the remote node',
								type: 'core',
								options: {
									chdir: {
										type: 'string',
										required: false,
										since_version: '0.6',
										description: 'Cd into this directory before running the command'
									},
									creates: {
										type: 'string',
										required: false,
										description: 'A filename, when it already exists, this step will not be run'
									},
									executable: {
										type: 'string',
										required: false,
										since_version: '0.9',
										description: 'Change the shell used to execute the command. Should be an absolute path to the executable'
									},
									free_form: {
										type: 'string',
										required: true,
										description: 'Takes a free form command to run'
									},
									removes: {
										type: 'string',
										required: false,
										since_version: '0.8',
										description: 'A filename, when it does not exist, this step will not be run'
									},
									warn: {
										type: 'boolean',
										required: false,
										since_version: '1.8',
										default_value: 'True',
										description: 'If command warnings are on in ansible.cfg, do not warn about this particular line if set to no/false'
									}
								}
							}
						]
					},
					{
						title: 'Database',
						modules: [
							{
								name: 'mongodb_user',
								description: 'Adds or removes a user from a MongoDB database',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'redis',
								description: 'Various redis commands, slave and flush',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'riak',
								description: 'This module handles some common Riak operations',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'mysql_db',
								description: 'Add or remove MySQL databases from a remote host',
								type: 'core',
								options: {
								}
							},
							{
								name: 'mysql_replication',
								description: 'Manage MySQL replication',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'mysql_user',
								description: 'Adds or removes a user from a MySQL database',
								type: 'core',
								options: {
								}
							},
							{
								name: 'mysql_variables',
								description: 'Manage MySQL global variables',
								type: 'core',
								options: {
								}
							},
							{
								name: 'postgresql_db',
								description: 'Add or remove PostgreSQL databases from a remote host',
								type: 'core',
								options: {
								}
							},
							{
								name: 'postgresql_privs',
								description: 'Grant or revoke privileges on PostgreSQL database objects',
								type: 'core',
								options: {
								}
							},
							{
								name: 'postgresql_user',
								description: 'Adds or removes a users (roles) from a PostgreSQL database',
								type: 'core',
								options: {
								}
							}
						]
					},
					{
						title: 'Files',
						modules: [
							{
								name: 'acl',
								description: 'Sets and retrieves file ACL information',
								type: 'core',
								options: {
								}
							},
							{
								name: 'assemble',
								description: 'Assembles a configuration file from fragments',
								type: 'core',
								options: {
								}
							},
							{
								name: 'copy',
								description: 'Copies files to remote locations',
								type: 'core',
								options: {
								}
							},
							{
								name: 'fetch',
								title: 'Fetches a file from remote nodes',
								description: 'This module works like copy, but in reverse. It is used for fetching files from remote machines and storing them locally in a file tree, organized by hostname. Note that this module is written to transfer log files that might not be present, so a missing remote file won’t be an error unless fail_on_missing is set to ‘yes’',
								type: 'core',
								options: {
									dest: {
										type: 'string',
										required: true,
										description: 'A directory to save the file into. For example, if the dest directory is /backup a src file named /etc/profile on host host.example.com, would be saved into /backup/host.example.com/etc/profile'
									},
									fail_on_missing: {
										type: 'choice',
										choices: ['yes', 'no'],
										required: false,
										since_version: '1.1',
										default_value: 'no',
										description: 'Makes it fails when the source file is missing'
									},
									flat: {
										type: 'string',
										required: false,
										since_version: '1.2',
										description: "Allows you to override the default behavior of prepending hostname/path/to/file to the destination. If dest ends with '/', it will use the basename of the source file, similar to the copy module. Obviously this is only handy if the filenames are unique"
									},
									src: {
										type: 'string',
										required: true,
										description: 'The file on the remote system to fetch. This must be a file, not a directory'
									},
									validate_checksum: {
										type: 'choice',
										choices: ['yes', 'no'],
										required: false,
										since_version: '1.4',
										default_value: 'yes',
										description: 'Verify that the source and destination checksums match after the files are fetched'
									}
								}
							},
							{
								name: 'file',
								title: 'Sets attributes of files',
								description: 'Sets attributes of files, symlinks, and directories, or removes files/symlinks/directories. Many other modules support the same options as the file module - including copy, template, and assemble',
								type: 'core',
								options: {
									follow: {
										type: 'choice',
										choices: ['yes', 'no'],
										required: false,
										since_version: '1.8',
										default_value: 'no',
										description: 'This flag indicates that filesystem links, if they exist, should be followed'
									},
									force: {
										type: 'choice',
										choices: ['yes', 'no'],
										required: false,
										default_value: 'no',
										description: 'Force the creation of the symlinks in two cases: the source file does not exist (but will appear later); the destination exists and is a file (so, we need to unlink the "path" file and create symlink to the "src" file in place of it)'
									},
									group: {
										type: 'string',
										required: false,
										description: 'Name of the group that should own the file/directory, as would be fed to chown'
									},
									mode: {
										type: 'string',
										required: false,
										description: 'Mode the file or directory should be, such as 0644 as would be fed to chmod. As of version 1.8, the mode may be specified as a symbolic mode (for example, u+rwx or u=rw,g=r,o=r)'
									},
									owner: {
										type: 'string',
										required: false,
										description: 'Name of the user that should own the file/directory, as would be fed to chown'
									},
									path: {
										type: 'string',
										required: true,
										description: 'Path to the file being managed. Aliases: dest, name'
									},
									recurse: {
										type: 'choice',
										choices: ['yes', 'no'],
										required: false,
										since_version: '1.1',
										default_value: 'no',
										description: 'Recursively set the specified file attributes (applies only to state=directory)'
									},
									selevel: {
										type: 'string',
										required: false,
										default_value: 's0',
										description: 'Level part of the SELinux file context. This is the MLS/MCS attribute, sometimes known as the range. _default feature works as for seuser'
									},
									serole: {
										type: 'string',
										required: false,
										description: 'Role part of SELinux file context, _default feature works as for seuser'
									},
									setype: {
										type: 'string',
										required: false,
										description: 'Type part of SELinux file context, _default feature works as for seuser'
									},
									seuser: {
										type: 'string',
										required: false,
										description: 'User part of SELinux file context. Will default to system policy, if applicable. If set to _default, it will use the user portion of the policy if available'
									},
									src: {
										type: 'string',
										required: false,
										description: 'Path of the file to link to (applies only to state=link). Will accept absolute, relative and nonexisting paths. Relative paths are not expanded'
									},
									state: {
										type: 'choice',
										choices: ['file', 'link', 'directory', 'hard', 'touch', 'absent'],
										required: false,
										default_value: 'file',
										description: 'If directory, all immediate subdirectories will be created if they do not exist, since 1.7 they will be created with the supplied permissions. If file, the file will NOT be created if it does not exist, see the copy or template module if you want that behavior. If link, the symbolic link will be created or changed. Use hard for hardlinks. If absent, directories will be recursively deleted, and files or symlinks will be unlinked. If touch (new in 1.4), an empty file will be created if the path does not exist, while an existing file or directory will receive updated file access and modification times (similar to the way `touch` works from the command line)'
									}
								}
							},
							{
								name: 'ini_file',
								description: 'Tweak settings in INI files',
								type: 'core',
								options: {
								}
							},
							{
								name: 'lineinfile',
								description: 'Ensure a particular line is in a file, or replace an existing line using a back-referenced regular expression',
								type: 'core',
								options: {
								}
							},
							{
								name: 'replace',
								description: 'Replace all instances of a particular string in a file using a back-referenced regular expression',
								type: 'core',
								options: {
								}
							},
							{
								name: 'stat',
								title: 'Retrieve file or file system status',
								description: "Retrieves facts for a file similar to the linux/unix ‘stat’ command",
								type: 'core',
								since_version: '1.3',
								options: {
									follow: {
										type: 'string',
										required: false,
										description: 'Whether to follow symlinks'
									},
									get_checksum: {
										type: 'string',
										required: false,
										since_version: '1.8',
										default_value: 'True',
										description: 'Whether to return a checksum of the file (currently sha1)'
									},
									get_md5: {
										type: 'string',
										required: false,
										default_value: 'True',
										description: "Whether to return the md5 sum of the file. Will return None if we're unable to use md5 (Common for FIPS-140 compliant systems)"
									},
									path: {
										type: 'string',
										required: true,
										description: 'The full path of the file/object to get the facts of'
									}
								}
							},
							{
								name: 'synchronize',
								description: 'Uses rsync to make synchronizing file paths in your playbooks quick and easy',
								type: 'core',
								options: {
								}
							},
							{
								name: 'template',
								title: 'Templates a file out to a remote server',
								description: "Templates are processed by the Jinja2 templating language (http://jinja.pocoo.org/docs/) - documentation on the template formatting can be found in the Template Designer Documentation (http://jinja.pocoo.org/docs/templates/). Six additional variables can be used in templates: ansible_managed (configurable via the defaults section of ansible.cfg) contains a string which can be used to describe the template name, host, modification time of the template file and the owner uid, template_host contains the node name of the template’s machine, template_uid the owner, template_path the absolute path of the template, template_fullpath is the absolute path of the template, and template_run_date is the date that the template was rendered. Note that including a string that uses a date in the template will result in the template being marked ‘changed’ each time",
								type: 'core',
								options: {
									backup: {
										type: 'choice',
										choices: ['yes', 'no'],
										required: false,
										default_value: 'no',
										description: 'Create a backup file including the timestamp information so you can get the original file back if you somehow clobbered it incorrectly'
									},
									dest: {
										type: 'string',
										required: true,
										description: 'Location to render the template to on the remote machine'
									},
									follow: {
										type: 'choice',
										choices: ['yes', 'no'],
										required: false,
										default_value: 'no',
										since_version: '1.8',
										description: 'This flag indicates that filesystem links, if they exist, should be followed'
									},
									group: {
										type: 'string',
										required: false,
										description: 'Name of the group that should own the file/directory, as would be fed to chown'
									},
									mode: {
										type: 'string',
										required: false,
										description: 'Mode the file or directory should be, such as 0644 as would be fed to chmod. As of version 1.8, the mode may be specified as a symbolic mode (for example, u+rwx or u=rw,g=r,o=r)'
									},
									owner: {
										type: 'string',
										required: false,
										description: 'Name of the user that should own the file/directory, as would be fed to chown'
									},
									selevel: {
										type: 'string',
										required: false,
										default_value: 's0',
										description: 'Level part of the SELinux file context. This is the MLS/MCS attribute, sometimes known as the range. _default feature works as for seuser'
									},
									serole: {
										type: 'string',
										required: false,
										description: 'Role part of SELinux file context, _default feature works as for seuser'
									},
									setype: {
										type: 'string',
										required: false,
										description: 'Type part of SELinux file context, _default feature works as for seuser'
									},
									seuser: {
										type: 'string',
										required: false,
										description: 'User part of SELinux file context. Will default to system policy, if applicable. If set to _default, it will use the user portion of the policy if available'
									},
									src: {
										type: 'string',
										required: true,
										description: 'Path of a Jinja2 formatted template on the local server. This can be a relative or absolute path'
									},
									validate: {
										type: 'string',
										required: false,
										since_version: '1,2',
										description: "The validation command to run before copying into place.The path to the file to validate is passed in via '%s' which must be present as in the visudo example below.validation to run before copying into place. The command is passed securely so shell features like expansion and pipes won't work"
									}
								}
							},
							{
								name: 'unarchive',
								description: 'Copies an archive to a remote location and unpack it',
								type: 'core',
								options: {
								}
							},
							{
								name: 'xattr',
								title: 'Set/retrieve extended attributes',
								description: 'Manages filesystem user defined extended attributes, requires that they are enabled on the target filesystem and that the setfattr/getfattr utilities are present',
								since_version: '1.3',
								type: 'core',
								options: {
									follow: {
										type: 'choice',
										choices: ['yes', 'no'],
										required: false,
										default_value: 'yes',
										description: 'if yes, dereferences symlinks and sets/gets attributes on symlink target, otherwise acts on symlink itself'
									},
									key: {
										type: 'string',
										required: false,
										description: 'The name of a specific Extended attribute key to set/retrieve'
									},
									name: {
										type: 'string',
										required: true,
										description: 'The full path of the file/object to get the facts of'
									},
									state: {
										type: 'choice',
										choices: ['read', 'present', 'all', 'keys', 'absent'],
										required: false,
										default_value: 'read',
										description: 'Defines which state you want to do. read retrieves the current value for a key. present sets name to value, default if value is set all dumps all data keys retrieves all keys. absent deletes the key'
									},
									value: {
										type: 'string',
										required: false,
										description: "The value to set the named name/key to, it automatically sets the state to 'present'"
									}
								}
							},
						]
					},
					{
						title: 'Inventory',
						modules: [
							{
								name: 'add_host',
								title: 'Add a host (and alternatively a group) to the ansible-playbook in-memory inventory',
								description: 'Use variables to create new hosts and groups in inventory for use in later plays of the same playbook. Takes variables so you can define the new hosts more fully',
								type: 'core',
								options: {
									groups: {
										type: 'string',
										required: false,
										description: 'The groups to add the hostname to, comma separated'
									},
									name: {
										type: 'string',
										required: true,
										description: 'The hostname/ip of the host to add to the inventory, can include a colon and a port number'
									}
								}
							},
							{
								name: 'group_by',
								title: 'Create Ansible groups based on facts',
								description: 'Use facts to create ad-hoc groups that can be used later in a playbook',
								type: 'core',
								options: {
									key: {
										type: 'string',
										required: true,
										description: 'The variables whose values will be used as groups'
									}
								}
							}
						]
					},
					{
						title: 'Messaging',
						modules: [
							{
								name: 'rabbitmq_parameter',
								description: 'Adds or removes parameters to RabbitMQ',
								options: [
								]
							},
							{
								name: 'rabbitmq_plugin',
								description: 'Adds or removes plugins to RabbitMQ',
								options: [
								]
							},
							{
								name: 'rabbitmq_policy',
								description: 'Manage the state of policies in RabbitMQ',
								options: [
								]
							},
							{
								name: 'rabbitmq_user',
								description: 'Adds or removes users to RabbitMQ',
								options: [
								]
							},
							{
								name: 'rabbitmq_vhost',
								description: 'Manage the state of a virtual host in RabbitMQ',
								options: [
								]
							}
						]
					},
					{
						title: 'Monitoring',
						modules: [
							{
								name: 'airbrake_deployment',
								description: 'Notify airbrake about app deployments',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'bigpanda',
								description: 'Notify BigPanda about deployments',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'boundary_meter',
								description: 'Manage boundary meters',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'datadog_event',
								description: 'Posts events to DataDog service',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'librato_annotation',
								description: 'Creates an annotation in librato',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'logentries',
								description: 'Module for tracking logs via logentries.com',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'monit',
								description: 'Manage the state of a program monitored via Monit',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'nagios',
								description: 'Perform common tasks in Nagios related to downtime and notifications',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'newrelic_deployment',
								description: 'Notify newrelic about app deployments',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'pagerduty',
								description: 'Create PagerDuty maintenance windows',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'pingdom',
								description: 'Pause/unpause Pingdom alerts',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'rollbar_deployment',
								description: 'Notify Rollbar about app deployments',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'stackdriver',
								description: 'Send code deploy and annotation events to stackdriver',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'zabbix_maintenance',
								description: 'Create Zabbix maintenance windows',
								type: 'extras',
								options: {
								}
							}
						]
					},
					{
						title: 'Network',
						modules: [
							{
								name: 'a10_server',
								description: 'Manage A10 Networks AX/SoftAX/Thunder/vThunder devices',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'a10_service_group',
								description: 'Manage A10 Networks AX/SoftAX/Thunder/vThunder devices',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'a10_virtual_server',
								description: 'Manage A10 Networks AX/SoftAX/Thunder/vThunder devices',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'bigip_facts',
								description: 'Collect facts from F5 BIG-IP devices',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'bigip_monitor_http',
								description: 'Manages F5 BIG-IP LTM http monitors',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'bigip_monitor_tcp',
								description: 'Manages F5 BIG-IP LTM tcp monitors',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'bigip_node',
								description: 'Manages F5 BIG-IP LTM nodes',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'bigip_pool',
								description: 'Manages F5 BIG-IP LTM pools',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'bigip_pool_member',
								description: 'Manages F5 BIG-IP LTM pool members',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'dnsimple',
								description: 'Interface with dnsimple.com (a DNS hosting service)',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'dnsmadeeasy',
								description: 'Interface with dnsmadeeasy.com (a DNS hosting service)',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'get_url',
								description: 'Downloads files from HTTP, HTTPS, or FTP to node',
								type: 'core',
								options: {
								}
							},
							{
								name: 'lldp',
								description: 'Get details reported by lldp',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'netscaler',
								description: 'Manages Citrix NetScaler entities',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'openvswitch_bridge',
								description: 'Manage Open vSwitch bridges',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'openvswitch_port',
								description: 'Manage Open vSwitch ports',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'slurp',
								description: 'Slurps a file from remote nodes',
								type: 'core',
								options: {
								}
							},
							{
								name: 'uri',
								description: 'Interacts with webservices',
								type: 'core',
								options: {
								}
							}
						]
					},
					{
						title: 'Notification',
						modules: [
							{
								name: 'campfire',
								description: 'Send a message to Campfire',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'flowdock',
								description: 'Send a message to a flowdock',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'grove',
								description: 'Sends a notification to a grove.io channel',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'hipchat',
								description: 'Send a message to hipchat',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'irc',
								description: 'Send a message to an IRC channel',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'jabber',
								description: 'Send a message to jabber user or chat room',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'mail',
								description: 'Send an email',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'mqtt',
								description: 'Publish a message on an MQTT topic for the IoT',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'nexmo',
								description: 'Send a SMS via nexmo',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'osx_say',
								description: 'Makes an OSX computer to speak',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'slack',
								description: 'Send Slack notifications',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'sns',
								description: 'Send Amazon Simple Notification Service (SNS) messages',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'twilio',
								description: 'Sends a text message to a mobile phone through Twilio',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'typetalk',
								description: 'Send a message to typetalk',
								type: 'extras',
								options: {
								}
							}
						]
					},
					{
						title: 'Packaging',
						modules: [
							{
								name: 'apt',
								title: 'Manages apt-packages',
								description: 'Manages apt packages (such as for Debian/Ubuntu)',
								type: 'core',
								options: {
									cache_valid_time: {
										type: 'string',
										required: false,
										description: 'If update_cache is specified and the last run is less or equal than cache_valid_time seconds ago, the update_cache gets skipped'
									},
									deb: {
										type: 'string',
										required: false,
										since_version: '1.6',
										description: 'Path to a .deb package on the remote machine'
									},
									default_release: {
										type: 'string',
										required: false,
										description: 'Corresponds to the -t option for apt and sets pin priorities'
									},
									dpkg_options: {
										type: 'string',
										required: false,
										default_value: 'force-confdef,force-confold',
										description: "Add dpkg options to apt command. Defaults to '-o \"Dpkg::Options::=--force-confdef\" -o \"Dpkg::Options::=--force-confold\"'Options should be supplied as comma separated list"
									},
									force: {
										type: 'choice',
										choices: ['yes', 'no'],
										required: false,
										default_value: 'no',
										description: 'If yes, force installs/removes'
									},
									install_recommends: {
										type: 'choice',
										choices: ['yes', 'no'],
										required: false,
										default_value: 'yes',
										description: "Corresponds to the --no-install-recommends option for apt. Default behavior (yes) replicates apt's default behavior; no does not install recommended packages. Suggested packages are never installed"
									},
									name: {
										type: 'string',
										required: false,
										description: 'A  package name, like foo, or package specifier with version, like foo=1.0. Name wildcards (fnmatch) like apt* and version wildcards like foo=1.0* are also supported'
									},
									purge: {
										type: 'choice',
										choices: ['yes', 'no'],
										required: false,
										description: 'Will force purging of configuration files if the module state is set to absent'
									},
									state: {
										type: 'choice',
										choices: ['latest', 'absent', 'present'],
										required: false,
										default_value: 'present',
										description: 'Indicates the desired package state. latest ensures that the latest version is installed'
									},
									update_cache: {
										type: 'choice',
										choices: ['yes', 'no'],
										required: false,
										description: 'Run the equivalent of apt-get update before the operation. Can be run as part of the package installation or as a separate step'
									},
									upgrade: {
										type: 'choice',
										choices: ['yes', 'safe', 'full', 'dist'],
										required: false,
										since_version: '1.1',
										default_value: 'yes',
										description: 'If yes or safe, performs an aptitude safe-upgrade. If full, performs an aptitude full-upgrade. If dist, performs an apt-get dist-upgrade. Note: This does not upgrade a specific package, use state=latest for that'
									}
								}
							},
							{
								name: 'apt_key',
								title: 'Add or remove an apt key',
								description: 'Add or remove an apt key, optionally downloading it',
								type: 'core',
								since_version: '1.0',
								options: {
									data: {
										type: 'string',
										required: false,
										description: 'Keyfile contents'
									},
									file: {
										type: '',
										required: false,
										description: 'Keyfile path'
									},
									id: {
										type: '',
										required: false,
										description: 'Identifier of key'
									},
									keyring: {
										type: 'string',
										required: false,
										since_version: '1.3',
										description: 'Path to specific keyring file in /etc/apt/trusted.gpg.d'
									},
									keyserver: {
										type: 'string',
										required: false,
										since_version: '1.6',
										description: 'Keyserver to retrieve key from'
									},
									state: {
										type: 'choice',
										choices: ['absent', 'present'],
										required: false,
										default_value: 'present',
										description: 'Used to specify if key is being added or revoked'
									},
									url: {
										type: 'string',
										required: false,
										description: 'Url to retrieve key from'
									},
									validate_certs: {
										type: 'choice',
										choices: ['yes', 'no'],
										required: false,
										default_value: 'yes',
										description: 'If no, SSL certificates for the target url will not be validated. This should only be used on personally controlled sites using self-signed certificates'
									}
								}
							},
							{
								name: 'apt_repository',
								title: 'Add and remove APT repositories',
								description: 'Add or remove an APT repositories in Ubuntu and Debian',
								type: 'core',
								options: {
									mode: {
										type: 'string',
										required: false,
										since_version: '1.6',
										default_value: '420',
										description: 'The octal mode for newly created files in sources.list.d'
									},
									repo: {
										type: 'string',
										required: true,
										description: 'A source string for the repository'
									},
									state: {
										type: 'choice',
										choices: ['absent', 'present'],
										required: false,
										default_value: 'present',
										description: 'A source string state'
									},
									update_cache: {
										type: 'choice',
										choices: ['yes', 'no'],
										required: false,
										default_value: 'yes',
										description: 'Run the equivalent of apt-get update when a change occurs. Cache updates are run after making changes'
									},
									validate_certs: {
										type: 'choice',
										choices: ['yes', 'no'],
										required: false,
										since_version: '1.8',
										default_value: 'yes',
										description: 'If no, SSL certificates for the target repo will not be validated. This should only be used on personally controlled sites using self-signed certificates'
									}
								}
							},
							{
								name: 'apt_rpm',
								description: 'apt_rpm package manager',
								options: [
								]
							},
							{
								name: 'composer',
								description: 'Dependency Manager for PHP',
								options: [
								]
							},
							{
								name: 'cpanm',
								description: 'Manages Perl library dependencies',
								options: [
								]
							},
							{
								name: 'easy_install',
								description: 'Installs Python libraries',
								options: [
								]
							},
							{
								name: 'gem',
								description: 'Manage Ruby gems',
								options: [
								]
							},
							{
								name: 'homebrew',
								description: 'Package manager for Homebrew',
								options: [
								]
							},
							{
								name: 'homebrew_cask',
								description: 'Install/uninstall homebrew casks',
								options: [
								]
							},
							{
								name: 'homebrew_tap',
								description: 'Tap a Homebrew repository',
								options: [
								]
							},
							{
								name: 'layman',
								description: 'Manage Gentoo overlays',
								options: [
								]
							},
							{
								name: 'macports',
								description: 'Package manager for MacPorts',
								options: [
								]
							},
							{
								name: 'npm',
								description: 'Manage node.js packages with npm',
								options: [
								]
							},
							{
								name: 'openbsd_pkg',
								description: 'Manage packages on OpenBSD',
								options: [
								]
							},
							{
								name: 'opkg',
								description: 'Package manager for OpenWrt',
								options: [
								]
							},
							{
								name: 'pacman',
								description: 'Manage packages with pacman',
								options: [
								]
							},
							{
								name: 'pip',
								description: 'Manages Python library dependencies',
								options: [
								]
							},
							{
								name: 'pkgin',
								description: 'Package manager for SmartOS',
								options: [
								]
							},
							{
								name: 'pkgng',
								description: 'Package manager for FreeBSD >= 9.0',
								options: [
								]
							},
							{
								name: 'pkgutil',
								description: 'Manage CSW-Packages on Solaris',
								options: [
								]
							},
							{
								name: 'portage',
								description: 'Package manager for Gentoo',
								options: [
								]
							},
							{
								name: 'portinstall',
								description: 'Installing packages from FreeBSD’s ports system',
								options: [
								]
							},
							{
								name: 'redhat_subscription',
								description: 'Manage Red Hat Network registration and subscriptions using the subscription-manager command',
								options: [
								]
							},
							{
								name: 'rhn_channel',
								description: 'Adds or removes Red Hat software channels',
								options: [
								]
							},
							{
								name: 'rhn_register',
								description: 'Manage Red Hat Network registration using the rhnreg_ks command',
								options: [
								]
							},
							{
								name: 'rpm_key',
								description: 'Adds or removes a gpg key from the rpm db',
								options: [
								]
							},
							{
								name: 'svr4pkg',
								description: 'Manage Solaris SVR4 packages',
								options: [
								]
							},
							{
								name: 'swdepot',
								description: 'Manage packages with swdepot package manager (HP-UX)',
								options: [
								]
							},
							{
								name: 'urpmi',
								description: 'Urpmi manager',
								options: [
								]
							},
							{
								name: 'yum',
								title: 'Manages packages with the yum package manager',
								description: 'Installs, upgrade, removes, and lists packages and groups with the yum package manager',
								type: 'core',
								options: {
									conf_file: {
										type: 'string',
										required: false,
										since_version: '0.6',
										description: 'The remote yum configuration file to use for the transaction'
									},
									disable_gpg_check: {
										type: 'choice',
										choices: ['yes', 'no'],
										required: false,
										since_version: '1.2',
										default_value: 'no',
										description: 'Whether to disable the GPG checking of signatures of packages being installed. Has an effect only if state is present or latest'
									},
									disablerepo: {
										type: 'string',
										required: false,
										since_version: '0.9',
										description: 'Repoid of repositories to disable for the install/update operation. These repos will not persist beyond the transaction. When specifying multiple repos, separate them with a ","'
									},
									enablerepo: {
										type: 'string',
										required: false,
										since_version: '0.9',
										description: 'Repoid of repositories to disable for the install/update operation. These repos will not persist beyond the transaction. When specifying multiple repos, separate them with a ","'
									},
									list: {
										type: 'string',
										required: false,
										description: 'Various (non-idempotent) commands for usage with /usr/bin/ansible and not playbooks'
									},
									name: {
										type: 'string',
										required: true,
										description: "Package name, or package specifier with version, like name-1.0. When using state=latest, this can be '*' which means run: yum -y update. You can also pass a url or a local path to a rpm file"
									},
									state: {
										type: 'choice',
										choices: ['present', 'latest', 'absent'],
										required: false,
										default_value: 'present',
										description: 'Whether to install (present, latest), or remove (absent) a package'
									}
								}
							},
							{
								name: 'zypper',
								description: 'Manage packages on SUSE and openSUSE',
								options: [
								]
							},
							{
								name: 'zypper_repository',
								description: 'Add and remove Zypper repositories',
								options: [
								]
							}
						]
					},
					{
						title: 'Source Control',
						modules: [
							{
								name: 'bzr',
								description: 'Deploy software (or files) from bzr branches',
								options: [
								]
							},
							{
								name: 'git',
								description: 'Deploy software (or files) from git checkouts',
								options: [
								]
							},
							{
								name: 'github_hooks',
								description: 'Manages github service hooks',
								options: [
								]
							},
							{
								name: 'hg',
								description: 'Manages Mercurial (hg) repositories',
								options: [
								]
							},
							{
								name: 'subversion',
								description: 'Deploys a subversion repository',
								options: [
								]
							}
						]
					},
					{
						title: 'System',
						modules: [
							{
								name: 'alternatives',
								title: 'Manages alternative programs for common commands',
								description: 'Manages symbolic links using the ‘update-alternatives’ tool provided on debian-like systems. Useful when multiple programs are installed but provide similar functionality (e.g. different editors)',
								type: 'extras',
								since_version: '1.6',
								options: {
									link: {
										type: 'string',
										required: false,
										description: 'The path to the symbolic link that should point to the real executable'
									},
									name: {
										type: 'string',
										required: true,
										description: 'The generic name of the link'
									},
									path: {
										type: 'string',
										required: true,
										description: 'The path to the real executable that the link should point to'
									}
								}
							},
							{
								name: 'at',
								description: 'Schedule the execution of a command or script file via the at command',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'authorized_key',
								description: 'Adds or removes an SSH authorized key',
								type: 'core',
								options: {
								}
							},
							{
								name: 'capabilities',
								description: 'Manage Linux capabilities',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'cron',
								description: 'Manage cron.d and crontab entries',
								type: 'core',
								options: {
								}
							},
							{
								name: 'debconf',
								title: 'Configure a .deb package',
								description: 'Configure a .deb package using debconf-set-selections. Or just query existing selections',
								since_version: '1.6',
								type: 'extras',
								options: {
									name: {
										type: 'string',
										required: true,
										description: 'Name of package to configure'
									},
									question: {
										type: 'string',
										required: false,
										description: 'A debconf configuration setting'
									},
									unseen: {
										type: 'string',
										required: false,
										description: "Do not set 'seen' flag when pre-seeding"
									},
									value: {
										type: 'string',
										required: false,
										description: 'Value to set the configuration to'
									},
									vtype: {
										type: 'choice',
										choices: ['string', 'password', 'boolean', 'select', 'multiselect', 'note', 'error', 'title', 'text'],
										required: false,
										description: 'The type of the value supplied'
									}
								}
							},
							{
								name: 'facter',
								description: 'Runs the discovery program facter on the remote system',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'filesystem',
								description: 'Makes file system on block device',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'firewalld',
								description: 'Manage arbitrary ports/services with firewalld',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'getent',
								description: 'A wrapper to the unix getent utility',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'group',
								description: 'Add or remove groups',
								type: 'core',
								options: {
								}
							},
							{
								name: 'hostname',
								description: 'Manage hostname',
								type: 'core',
								options: {
								}
							},
							{
								name: 'kernel_blacklist',
								description: 'Blacklist kernel modules',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'locale_gen',
								title: 'Creates or removes locales',
								description: 'Manages locales by editing /etc/locale.gen and invoking locale-gen',
								type: 'extras',
								since_version: '1.6',
								options: {
									name: {
										type: 'string',
										required: true,
										description: 'Name and encoding of the locale, such as "en_GB.UTF-8"',
									},
									state: {
										type: 'choice',
										choices: ['present', 'absent'],
										required: false,
										default_value: 'present',
										description: 'Whether the locale shall be present'
									}
								}
							},
							{
								name: 'lvg',
								description: 'Configure LVM volume groups',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'lvol',
								description: 'Configure LVM logical volumes',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'modprobe',
								description: 'Add or remove kernel modules',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'mount',
								description: 'Control active and configured mount points',
								type: 'core',
								options: {
								}
							},
							{
								name: 'ohai',
								description: 'Returns inventory data from Ohai',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'open_iscsi',
								description: 'Manage iscsi targets with open-iscsi',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'seboolean',
								description: 'Toggles SELinux booleans',
								type: 'core',
								options: {
								}
							},
							{
								name: 'selinux',
								description: 'Change policy and state of SELinux',
								type: 'core',
								options: {
								}
							},
							{
								name: 'service',
								title: 'Manage services',
								description: 'Controls services on remote hosts',
								type: 'core',
								options: {
									arguments: {
                                        type: 'string',
                                        required: false,
                                        description: 'Additional arguments provided on the command line'
                                    },
                                    enabled: {
                                        type: 'choice',
                                        choices: ['yes', 'no'],
                                        required: false,
                                        description: 'Whether the service should start on boot'
                                    },
                                    name: {
                                        type: 'string',
                                        required: true,
                                        description: 'Name of the service'
                                    },
                                    pattern: {
                                        type: 'string',
                                        required: false,
                                        since_version: '0.7',
                                        description: 'If the service does not respond to the status command, name a substring to look for as would be found in the output of the ps command as a stand-in for a status result. If the string is found, the service will be assumed to be running'
                                    },
                                    runlevel: {
                                        type: 'string',
                                        required: false,
                                        default_value: 'default',
                                        description: 'For OpenRC init scripts (ex: Gentoo) only. The runlevel that this service belongs to'
                                    },
                                    sleep: {
                                        type: 'string',
                                        required: false,
                                        since_version: '1.3',
                                        description: 'If the service is being restarted then sleep this many seconds between the stop and start command. This helps to workaround badly behaving init scripts that exit immediately after signaling a process to stop'
                                    },
                                    state: {
                                        type: 'choice',
                                        choices: ['started', 'stopped', 'restarted', 'reloaded'],
                                        required: false,
                                        description: 'started/stopped are idempotent actions that will not run commands unless necessary. restarted will always bounce the service. reloaded will always reload'
                                    }
								}
							},
							{
								name: 'setup',
								description: 'Gathers facts about remote hosts',
								type: 'core',
								options: {
								}
							},
							{
								name: 'sysctl',
								description: 'Manage entries in sysctl.conf',
								type: 'core',
								options: {
								}
							},
							{
								name: 'ufw',
								description: 'Manage firewall with UFW',
								type: 'extras',
								options: {
								}
							},
							{
								name: 'user',
								description: 'Manage user accounts',
								type: 'core',
								options: {
								}
							},
							{
								name: 'zfs',
								description: 'Manage zfs',
								type: 'extras',
								options: {
								}
							}
						]
					},
					{
						title: 'Utilities',
						modules: [
							{
								name: 'accelerate',
								description: 'Enable accelerated mode on remote node',
								type: 'core',
								since_version: '1.3',
								options: {
								}
							},
							{
								name: 'fireball',
								title: 'Enable fireball mode on remote node',
								description: 'This modules launches an ephemeral fireball ZeroMQ message bus daemon on the remote node which Ansible can use to communicate with nodes at high speed. The daemon listens on a configurable port for a configurable amount of time. Starting a new fireball as a given user terminates any existing user fireballs. Fireball mode is AES encrypted',
								type: 'core',
								options: {
									minutes: {
										type: 'integer',
										required: false,
										default_value: '30',
										min_value: 1,
										description: 'The fireball listener daemon is started on nodes and will stay around for this number of minutes before turning itself off'
									},
									port: {
										type: 'range',
										required: false,
										default_value: '5099',
										min_value: 1,
										max_value: 65535,
										description: 'TCP port for ZeroMQ'
									}
								}
							},
							{
								name: 'assert',
								title: 'Fail with custom message',
								description: 'This module asserts that a given expression is true and can be a simpler alternative to the ‘fail’ module in some cases',
								since_version: '1.5',
								type: 'core',
								options: {
									that: {
										type: 'string',
										required: true,
										description: "A string expression of the same form that can be passed to the 'when' statement. Alternatively, a list of string expressions"
									}
								}
							},
							{
								name: 'async_status',
								description: 'Obtain status of asynchronous task',
								type: 'core',
								options: {
								}
							},
							{
								name: 'debug',
								title: 'Print statements during execution',
								description: 'This module prints statements during execution and can be useful for debugging variables or expressions without necessarily halting the playbook. Useful for debugging together with the ‘when:’ directive',
								type: 'core',
								options: {
									msg: {
										type: 'string',
										required: false,
										default_value: 'Hello world!',
										description: 'The customized message that is printed. If omitted, prints a generic message'
									},
									var: {
										type: 'string',
										required: false,
										description: "A variable name to debug. Mutually exclusive with the 'msg' option"
									}
								}
							},
							{
								name: 'fail',
								description: 'Fail with custom message',
								type: 'core',
								options: {
								}
							},
							{
								name: 'include_vars',
								description: 'Load variables from files, dynamically within a task',
								since_version: '1.4',
								type: 'core',
								options: {
								}
							},
							{
								name: 'pause',
								description: 'Pause playbook execution',
								type: 'core',
								options: {
								}
							},
							{
								name: 'set_fact',
								description: 'Set host facts from a task',
								since_version: '1.2',
								type: 'core',
								options: {
								}
							},
							{
								name: 'wait_for',
								description: 'Waits for a condition before continuing',
								type: 'core',
								options: {
								}
							}
						]
					},
					{
						title: 'Web Infrastructure',
						modules: [
							{
								name: 'apache2_module',
								description: 'Enables/disables a module of the Apache2 webserver',
								since_version: '1.6',
								options: {
								}
							},
							{
								name: 'django_manage',
								description: 'Manages a Django application',
								since_version: '1.1',
								options: {
								}
							},
							{
								name: 'ejabberd_user',
								description: 'Manages users for ejabberd servers',
								since_version: '1.5',
								options: {
								}
							},
							{
								name: 'htpasswd',
								description: 'Manages user files for basic authentication',
								since_version: '1.3',
								options: {
								}
							},
							{
								name: 'jboss',
								description: 'Deploys applications to JBoss',
								since_version: '1.4',
								options: {
								}
							},
							{
								name: 'jira',
								description: 'Create and modify issues in a JIRA instance',
								since_version: '1.6',
								options: {
								}
							},
							{
								name: 'supervisorctl',
								description: 'Manage the state of a program or group of programs running via supervisord',
								options: [
								]
							}
						]
					},
					{
						title: 'Windows',
						modules: [
							{
								name: 'win_feature',
								description: 'Installs and uninstalls Windows Features',
								since_version: '1.7',
								options: {
								}
							},
							{
								name: 'win_get_url',
								description: 'Fetches a file from a given URL',
								since_version: '1.7',
								options: {
								}
							},
							{
								name: 'win_group',
								description: 'Add and remove local groups',
								since_version: '1.7',
								options: {
								}
							},
							{
								name: 'win_msi',
								description: 'Installs and uninstalls Windows MSI files',
								since_version: '1.7',
								options: {
								}
							},
							{
								name: 'win_ping',
								description: 'A windows version of the classic ping module',
								since_version: '1.7',
								options: {
								}
							},
							{
								name: 'win_service',
								description: 'Manages Windows services',
								since_version: '1.7',
								options: {
								}
							},
							{
								name: 'win_stat',
								description: 'Returns information about a Windows file',
								since_version: '1.7',
								options: {
								}
							},
							{
								name: 'win_user',
								description: 'Manages local Windows user accounts',
								since_version: '1.7',
								options: {
								}
							}
						]
					}
				];

				// helpers

				var getEntryName = function(elem) {
					return $('span', elem).first().text();
				};

				var highlightMenuEntry = function(elem, clearOtherEntries) {
					if (clearOtherEntries) {
						$(elem).siblings('.list-group-item-info').removeClass('list-group-item-info');
					}
					$(elem).addClass('list-group-item-info');
				};

				var highlightRequiredFields = function(elem) {
					$(elem).parent().find('.js-module-option-required:not(.list-group-item-info)').addClass('list-group-item-danger');
				};

				var unhighlightRequiredField = function(elem) {
					$(elem).removeClass('list-group-item-danger');
				};

				var unhighlightMenuEntry = function(elem) {
					$(elem).removeClass('list-group-item-info');
				};

				var clearCommonModuleOptions = function() {
					var commonOptions = $('.js-module-common-option');
					commonOptions.val('');
					commonOptions.parent().removeClass('list-group-item-info');
				};

				var regenerateYamlDocument = function() {
					$('.js-result-textarea').html(generateYamlCommand());
				};

				var findCategoryByName = function(categoryName) {
					return _.find(modulesData, function(elem) {
						return elem.title == categoryName;
					});
				};

				var getModulesListOfCategory = function(categoryName) {
					var category = findCategoryByName(categoryName);
					return category.modules;
				};

				var showModulesList = function(elem) {
					var modules = getModulesListOfCategory(getEntryName(elem));
					$('.js-modules-list ul').html(createEntriesForModules(modules, 'js-module-name'));
					registerEventsForModulesList();
					$('.js-modules-list').removeClass("hidden");
				};

				var getNameOfActiveCategory = function() {
					return $('.js-categories-list .list-group-item-info span').first().text();
				};

				var findModuleByName = function(modulesList, moduleName) {
					return _.find(modulesList, function(elem) {
						return elem.name == moduleName;
					});
				};

				var getOptionsListOfModule = function(moduleName) {
					var categoryName = getNameOfActiveCategory();
					var category = findCategoryByName(categoryName);
					var module = findModuleByName(category.modules, moduleName);
					return module.options;
				};

				var showModuleOptionsList = function(elem) {
					var modules = getOptionsListOfModule(getEntryName(elem));

					$('.js-module-options-list .js-module-options-dynamic-list').html(createEntriesForModuleOptions(modules, 'js-module-option-name'));
					registerEventsForModuleOptionsList();

					$('.js-module-options-list').removeClass('hidden');
				};

				var hideModuleOptionsList = function() {
					$('.js-module-options-list').addClass('hidden');
				};

				var clearModuleOptionValue = function(elem) {
					$('.js-module-option-text-value', elem).val('');
				};

				var showYamlDocument = function() {
					regenerateYamlDocument();

					$('.js-result-command').removeClass('hidden');
				};

				var hideYamlDocument = function() {
					$('.js-result-command').addClass('hidden');
				};

				var getCategoriesList = function() {
					return _.pluck(modulesData, 'title');
				};

				var createEntriesForCategories = function(names, elemClassName) {
					return _.map(names, function(elemName) {
						return '<li class="list-group-item">'
								+ '<span class="' + elemClassName + '">' + elemName + '</span>'
							+ '</li>';
					});
				};

				var createEntriesForModules = function(elems, elemClassName) {
					// TODO: remove 'disable' when all modules will be covered
					return _.map(elems, function(elem) {
						var isDisabled = !_.isUndefined(elem.options) && _.isEmpty(elem.options);
						var disabledClass = isDisabled ? ' disabled' : '';
						return '<li class="list-group-item' + disabledClass + '">'
								+ '<span class="' + elemClassName + '">' + elem.name + '</span>'
								+ '&nbsp;<a target="_blank" href="http://docs.ansible.com/' + elem.name + '_module.html"><span class="glyphicon glyphicon-new-window smaller"></span></a>'
								+ (isDisabled ? '&nbsp;<span class="label label-default pull-right">TODO</span>' : '')
								+ (elem.since_version ? '<span class="label label-warning pull-right">' + elem.since_version + '</span>' : '')
								+ '<br /><small>' + (elem.title || elem.description) + '</small>'
							+ '</li>';
					});
				};

				var createEntriesForModuleOptions = function(names, elemClassName) {
					return _.map(names, function(value, key) {
							var entryClasses = '';
							if (value.required) {
								entryClasses = ' js-module-option-required';
							}
							var result = '<li class="list-group-item' + entryClasses + '">';
							result += '<span class="' + elemClassName + '">' + key + '</span>&nbsp;';
							if (value.type === 'choice' && value.choices && value.choices.length > 0) {
								result += '<select class="js-module-option-value js-module-option-select-value">';
								if (!value.default_value) {
									result += '<option value=""></option>';
								}
								_.forEach(value.choices, function(choice) {
									if (value.default_value === choice) {
										result += '<option value="' + choice + '" selected="selected">' + choice + '</option>';
									} else {
										result += '<option value="' + choice + '">' + choice + '</option>';
									}
								});
								result += '</select>';
							} else if (value.type === 'integer' || value.type === 'range') {
								var defaultValue = value.default_value ? ' value="' + value.default_value + '"' : '';
								var minValue = value.min_value ? ' min="' + value.min_value + '"' : '';
								var maxValue = value.max_value ? ' max="' + value.max_value + '"' : '';
								result += '<input type="number" class="js-module-option-value js-module-option-text-value" autocomplete="off"' + minValue + maxValue + defaultValue + ' />';

							} else {
								var defaultValue = value.default_value ? ' value="' + value.default_value + '"' : '';
								result += '<input type="text" class="js-module-option-value js-module-option-text-value" autocomplete="off"'+ defaultValue + ' />';
							}
							if (value.since_version) {
								result += '<span class="label label-warning pull-right">' + value.since_version + '</span>';
							}
							result += '<br/><small>' + value.description + '</small>';
							result += '</li>';
							return result;
					});
				};

				var showCategoriesList = function() {
					$('.js-categories-list ul').html(createEntriesForCategories(getCategoriesList(), 'js-category-name'));
					registerEventsForCategoriesList();
				};

				var registerEventsForCategoriesList = function() {
					$('.js-categories-list .list-group-item')
						.hover(function() {
							$(this).toggleClass('active');
						})
						.click(function(e) {
							$(this).trigger('app:category-selected');
						});
				};

				var registerEventsForModulesList = function() {
					// TODO: remove 'disabled' when all modules will be covered
					$('.js-modules-list .list-group-item:not(.disabled)')
						.hover(function() {
							$(this).toggleClass('active');
						})
						.click(function() {
							$(this).trigger('app:module-selected');

							// FIXME: add handler only for invisible entries
							$('html, body').animate({
								scrollTop: 0
							}, 200);
						});
				};

				var registerEventsForModuleOptionsList = function() {
					$('.js-module-options-list .js-module-option-value').change(function(event) {
						if ($(event.target).val() === '') {
							$(this).parent('.list-group-item').trigger('app:module-option-unselected');
						} else {
							$(this).parent('.list-group-item').trigger('app:module-option-selected');
						}
					});
				};

				// define callbacks

				var onCategorySelection = function(event) {
					highlightMenuEntry(event.target, true);
					hideModuleOptionsList();
					hideYamlDocument();
					showModulesList(event.target);
				};

				var onModuleSelection = function(event) {
					highlightMenuEntry(event.target, true);
					clearCommonModuleOptions();
					showModuleOptionsList(event.target);
					showYamlDocument();
				};

				var onModuleOptionSelection = function(event) {
					highlightMenuEntry(event.target);
					unhighlightRequiredField(event.target);
					highlightRequiredFields(event.target);
					regenerateYamlDocument();
				};

				var onModuleOptionUnselection = function(event) {
					unhighlightMenuEntry(event.target);
					highlightRequiredFields(event.target);
					clearModuleOptionValue(event.target);
					regenerateYamlDocument();
				};

				// bind callbacks

				$(document).bind('app:category-selected', onCategorySelection);
				$(document).bind('app:module-selected', onModuleSelection);
				$(document).bind('app:module-option-selected', onModuleOptionSelection);
				$(document).bind('app:module-option-unselected', onModuleOptionUnselection);

				// other

				var getNameOfActiveModule = function() {
					return $('.js-modules-list .list-group-item-info .js-module-name').first().text();
				};

				var getFormattedListModuleOptionsWithValues = function(separator) {
					var moduleOptions = [];
					$('.js-module-options-dynamic-list .list-group-item-info').each(function(el) {
						var option = $('.js-module-option-name', this).text();
						var value = $('.js-module-option-value', this).val();
						if (value.indexOf("{{") >= 0 && value.indexOf("}}") >= 0) {
							value = '"' + value + '"';
						}
						var text = option + separator + ' ' + value;
						moduleOptions.push(text);
					});
					return moduleOptions;
				};

				var getTaskName = function() {
					return $('.js-module-option-task-name').first().val();
				};

				var generateYamlCommand = function() {
					var moduleName = getNameOfActiveModule();
					var moduleOptions = getFormattedListModuleOptionsWithValues(':'); // TODO: handle also key=value
					var taskName = getTaskName();
					var result = '- ';
					if (taskName !== '') {
						result += 'name: ' + taskName + "\n  ";
					}
					result += moduleName + ":\n    " + moduleOptions.join("\n    ");
					return result;
				};

				// start

				showCategoriesList();
			});
		</script>
	</body>
</html>

